#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbqueue")]
	public partial class STM_dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertSTM(STM instance);
    partial void UpdateSTM(STM instance);
    partial void DeleteSTM(STM instance);
    #endregion
		
		public STM_dbDataContext() : 
				base(global::WindowsFormsApp2.Properties.Settings.Default.dbqueueConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public STM_dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public STM_dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public STM_dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public STM_dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<STM> STMs
		{
			get
			{
				return this.GetTable<STM>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.STM_db")]
		public int STM_db([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientID", DbType="Int")] System.Nullable<int> clientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceNum", DbType="VarChar(10)")] string invoiceNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientName", DbType="VarChar(50)")] string clientName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionDate", DbType="Date")] System.Nullable<System.DateTime> transactionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReqStat", DbType="VarChar(MAX)")] string reqStat, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PayStat", DbType="VarChar(9)")] string payStat)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientID, invoiceNum, clientName, transactionDate, reqStat, payStat);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientID;
		
		private string _ClientName;
		
		private System.DateTime _TransactionDate;
		
		private int _QueuePosition;
		
		private string _RequirementsStatus;
		
		private string _PaymentStatus;
		
		private System.Nullable<int> _ID;
		
		private EntitySet<STM> _STMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnQueuePositionChanging(int value);
    partial void OnQueuePositionChanged();
    partial void OnRequirementsStatusChanging(string value);
    partial void OnRequirementsStatusChanged();
    partial void OnPaymentStatusChanging(string value);
    partial void OnPaymentStatusChanged();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    #endregion
		
		public Client()
		{
			this._STMs = new EntitySet<STM>(new Action<STM>(this.attach_STMs), new Action<STM>(this.detach_STMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="Date NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueuePosition", DbType="Int NOT NULL")]
		public int QueuePosition
		{
			get
			{
				return this._QueuePosition;
			}
			set
			{
				if ((this._QueuePosition != value))
				{
					this.OnQueuePositionChanging(value);
					this.SendPropertyChanging();
					this._QueuePosition = value;
					this.SendPropertyChanged("QueuePosition");
					this.OnQueuePositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequirementsStatus", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RequirementsStatus
		{
			get
			{
				return this._RequirementsStatus;
			}
			set
			{
				if ((this._RequirementsStatus != value))
				{
					this.OnRequirementsStatusChanging(value);
					this.SendPropertyChanging();
					this._RequirementsStatus = value;
					this.SendPropertyChanged("RequirementsStatus");
					this.OnRequirementsStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_STM", Storage="_STMs", ThisKey="ClientID", OtherKey="ClientID")]
		public EntitySet<STM> STMs
		{
			get
			{
				return this._STMs;
			}
			set
			{
				this._STMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STMs(STM entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_STMs(STM entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STM")]
	public partial class STM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STMID;
		
		private System.Nullable<int> _ClientID;
		
		private string _InvoiceNum;
		
		private string _ClientName;
		
		private System.DateTime _TransactionDate;
		
		private string _ReqStat;
		
		private string _PayStat;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTMIDChanging(int value);
    partial void OnSTMIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnInvoiceNumChanging(string value);
    partial void OnInvoiceNumChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnReqStatChanging(string value);
    partial void OnReqStatChanged();
    partial void OnPayStatChanging(string value);
    partial void OnPayStatChanged();
    #endregion
		
		public STM()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STMID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STMID
		{
			get
			{
				return this._STMID;
			}
			set
			{
				if ((this._STMID != value))
				{
					this.OnSTMIDChanging(value);
					this.SendPropertyChanging();
					this._STMID = value;
					this.SendPropertyChanged("STMID");
					this.OnSTMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNum", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string InvoiceNum
		{
			get
			{
				return this._InvoiceNum;
			}
			set
			{
				if ((this._InvoiceNum != value))
				{
					this.OnInvoiceNumChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNum = value;
					this.SendPropertyChanged("InvoiceNum");
					this.OnInvoiceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="Date NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqStat", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ReqStat
		{
			get
			{
				return this._ReqStat;
			}
			set
			{
				if ((this._ReqStat != value))
				{
					this.OnReqStatChanging(value);
					this.SendPropertyChanging();
					this._ReqStat = value;
					this.SendPropertyChanged("ReqStat");
					this.OnReqStatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayStat", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string PayStat
		{
			get
			{
				return this._PayStat;
			}
			set
			{
				if ((this._PayStat != value))
				{
					this.OnPayStatChanging(value);
					this.SendPropertyChanging();
					this._PayStat = value;
					this.SendPropertyChanged("PayStat");
					this.OnPayStatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_STM", Storage="_Client", ThisKey="ClientID", OtherKey="ClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.STMs.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.STMs.Add(this);
						this._ClientID = value.ClientID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
